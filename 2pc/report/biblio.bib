@incollection{Kolesnikov,
abstract = {We present a new garbled circuit construction for two-party secure function evaluation (SFE). In our one-round protocol, XOR gates are evaluated “for free”, which results in the corresponding improvement over the best garbled circuit implementations (e.g. Fairplay [19]). We build permutation networks [26] and Universal Circuits (UC) [25] almost exclusively of XOR gates; this results in a factor of up to 4 improvement (in both computation and communication) of their SFE. We also improve integer addition and equality testing by factor of up to 2. We rely on the Random Oracle (RO) assumption. Our constructions are proven secure in the semi-honest model. 1},
address = {Berlin, Heidelberg},
author = {Kolesnikov, Vladimir and Schneider, Thomas},
booktitle = {Automata, Languages and Programming},
doi = {10.1007/978-3-540-70583-3_40},
file = {:Users/luca/Documents/Mendeley Desktop/Kolesnikov, Schneider - Improved Garbled Circuit Free XOR Gates and Applications - 2008.pdf:pdf},
publisher = {Springer Berlin Heidelberg},
title = {{Improved Garbled Circuit: Free XOR Gates and Applications}},
url = {http://link.springer.com/10.1007/978-3-540-70583-3{\_}40},
year = {2008}
}
@article{Malkhi2004,
abstract = {Advances in modern cryptography coupled with rapid growth in processing and communication speeds make secure two-party computation a realistic paradigm. Yet, thus far, interest in this paradigm has remained mostly theoretical. This paper introduces Fairplay [28], a full-fledged system that implements generic secure function evaluation (SFE). Fairplay comprises a high level procedural definition language called SFDL tailored to the SFE paradigm; a compiler of SFDL into a one-pass Boolean circuit presented in a language called SHDL; and Bob/Alice programs that evaluate the SHDL circuit in the manner suggested by Yao in [39]. This system enables us to present the first evaluation of an overall SFE in real settings, as well as examining its components and identifying potential bottlenecks. It provides a test-bed of ideas and enhancements con- cerning SFE, whether by replacing parts of it, or by integrating with it. We exemplify its utility by exam- ining several alternative implementations of oblivious transfer within the system, and reporting on their effect on overall performance.},
author = {Malkhi, Dahlia and Nisan, Noam and Pinkas, Benny and Sella, Yaron},
file = {:Users/luca/Documents/Mendeley Desktop/Kolesnikov, Schneider - Improved Garbled Circuit Free XOR Gates and Applications - 2004.pdf:pdf},
journal = {{\{}USENIX{\}} Security Symposium},
pages = {287--302},
title = {{Fairplay - Secure Two-Party Computation System}},
year = {2004}
}
@inproceedings{Yao1982,
abstract = {Two millionaires wish to know who is richer; however, they do not want to find out inadvertently any additional information about each other's wealth. How can they carry out such a conversation?},
author = {Yao, Andrew C.},
booktitle = {23rd Annual Symposium on Foundations of Computer Science (sfcs 1982)},
doi = {10.1109/SFCS.1982.38},
file = {:Users/luca/Documents/Mendeley Desktop/Yao - Protocols for secure computations - 1982.pdf:pdf},
isbn = {0272-5428 VO -},
issn = {0272-5428},
month = {nov},
pages = {160--164},
publisher = {IEEE},
title = {{Protocols for secure computations}},
url = {http://ieeexplore.ieee.org/document/4568388/},
year = {1982}
}
@misc{Goetsch2008,
author = {Goetsch, Dave and Glickman, Jennifer},
booktitle = {The Big Bang Theory},
publisher = {CBS},
title = {{The Lizard–Spock Expansion}},
year = {2008}
}
@inproceedings{Songhori2015,
abstract = {We introduce TinyGarble, a novel automated methodology based on powerful logic synthesis techniques for generating and optimizing compressed Boolean circuits used in secure computation, such as Yao's Garbled Circuit (GC) protocol. TinyGarble achieves an unprecedented level of compactness and scalability by using a sequential circuit description for GC. We introduce new libraries and transformations, such that our sequential circuits can be optimized and securely evaluated by interfacing with available garbling frameworks. The circuit compactness makes the memory footprint of the garbling operation fit in the processor cache, resulting in fewer cache misses and thereby less CPU cycles. Our proof-of-concept implementation of benchmark functions using TinyGarble demonstrates a high degree of compactness and scalability. We improve the results of existing automated tools for GC generation by orders of magnitude; for example, TinyGarble can compress the memory footprint required for 1024-bit multiplication by a factor of 4,172, while decreasing the number of non-XOR gates by 67{\%}. Moreover, with TinyGarble we are able to implement functions that have never been reported before, such as SHA-3. Finally, our sequential description enables us to design and realize a garbled processor, using the MIPS I instruction set, for private function evaluation. To the best of our knowledge, this is the first scalable emulation of a general purpose processor.},
author = {Songhori, Ebrahim M and Hussain, Siam U and Sadeghi, Ahmad-Reza and Schneider, Thomas and Koushanfar, Farinaz},
booktitle = {2015 IEEE Symposium on Security and Privacy},
doi = {10.1109/SP.2015.32},
file = {:Users/luca/Documents/Mendeley Desktop/Songhori et al. - TinyGarble Highly Compressed and Scalable Sequential Garbled Circuits - 2015.pdf:pdf},
isbn = {978-1-4673-6949-7},
keywords = {Garbled Circuit,Hardware Synthesis,Index Terms Secure Function Evaluation,Logic Design,Multiparty Computation,Yao's protocol},
month = {may},
pages = {411--428},
publisher = {IEEE},
title = {{TinyGarble: Highly Compressed and Scalable Sequential Garbled Circuits}},
url = {https://practice-project.eu/downloads/publications/TinyGarble-Highly-Compressed-Scalable-Sequential-Garbled-Circuits.pdf http://ieeexplore.ieee.org/document/7163039/},
volume = {2},
year = {2015}
}
@inproceedings{Bellare2012,
abstract = {Garbled circuits, a classical idea rooted in the work of Andrew Yao, have long been understood as a cryptographic technique, not a cryptographic goal. Here we cull out a primitive corresponding to this technique. We call it a garbling scheme. We provide a provable-security treatment for garbling schemes, endowing them with a versatile syntax and multiple security definitions. The most basic of these, privacy, suffices for two- party secure function evaluation (SFE) and private function evaluation (PFE). Starting from a PRF, we provide an efficient garbling scheme achieving privacy and we analyze its concrete security. We next consider obliviousness and authenticity, properties needed for private and verifiable outsourcing of computation. We extend our scheme to achieve these ends. We provide highly efficient blockcipher-based instantiations of both schemes. Our treatment of garbling schemes presages more efficient garbling, more rigorous analyses, and more modularly designed higher-level protocols.},
address = {New York, New York, USA},
author = {Bellare, Mihir and Hoang, Viet Tung and Rogaway, Phillip},
booktitle = {Proceedings of the 2012 ACM conference on Computer and communications security - CCS '12},
doi = {10.1145/2382196.2382279},
file = {:Users/luca/Documents/Mendeley Desktop/Bellare, Hoang, Rogaway - Foundations of garbled circuits - 2012.pdf:pdf},
isbn = {9781450316514},
issn = {15437221},
keywords = {Garbled circuits,Yao's protocol,garbling schemes,provable security,secure function evaluation},
pages = {784},
publisher = {ACM Press},
title = {{Foundations of garbled circuits}},
url = {http://eprint.iacr.org/2012/265.pdf http://dl.acm.org/citation.cfm?doid=2382196.2382279},
year = {2012}
}
@inproceedings{Bellare2013,
abstract = {We advocate schemes based on fixed-key AES as the best route to highly efficient circuit-garbling. We provide such schemes making only one AES call per garbled-gate evaluation. On the theoretical side, we justify the security of these methods in the random-permutation model, where parties have access to a public random permutation. On the practical side, we provide the Just Garble system, which implements our schemes. Just Garble evaluates moderate-sized garbled-circuits at an amortized cost of 23.2 cycles per gate (7.25 nsec), far faster than any prior reported results.},
author = {Bellare, Mihir and {Viet Tung Hoang} and Keelveedhi, Sriram and Rogaway, Phillip},
booktitle = {2013 IEEE Symposium on Security and Privacy},
doi = {10.1109/SP.2013.39},
file = {:Users/luca/Documents/Mendeley Desktop/Bellare et al. - Efficient Garbling from a Fixed-Key Blockcipher - 2013.pdf:pdf},
isbn = {978-0-7695-4977-4},
issn = {1081-6011},
keywords = {Cryptography,Games,Garbled circuits,Just Garble system,Logic gates,Protocols,Semantics,Wires,Yao's protocol,circuit-garbling,cryptography,fixed-key AES,fixed-key blockcipher,garbled-gate evaluation,garbling schemes,moderate-sized garbled-circuits,multiparty computation,public random permutation,random-permutation model,timing study},
month = {may},
pages = {478--492},
publisher = {IEEE},
title = {{Efficient Garbling from a Fixed-Key Blockcipher}},
url = {https://eprint.iacr.org/2013/426.pdf http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6547128 http://ieeexplore.ieee.org/document/6547128/},
year = {2013}
}
